#####################################################
# A set of primitive vmpooler commands using curl

listvm () { 
  curl --url http://vcloud.delivery.puppetlabs.net/vm
}

getvm () {
  curl -k -X POST -H X-AUTH-TOKEN:df0zurdwun6g7dr7ss2ymozlwpf2qvdk --url https://vcloud.delivery.puppetlabs.net/vm/$1
}

sshvm () {
  ssh -i ~/.ssh/id_rsa-acceptance root@$1
}

rmvm () {
  curl -k -H X-AUTH-TOKEN:df0zurdwun6g7dr7ss2ymozlwpf2qvdk -X DELETE --url https://vcloud.delivery.puppetlabs.net/vm/$1
}

showvm () {
  curl --url http://vmpooler.delivery.puppetlabs.net/api/v1/vm/$1
}

modifyvm () {
  if [ -z $2 ]; then
    echo "You need to provide the parameters to be changed: https://github.com/puppetlabs/vmpooler/blob/master/API.md#put-vmhostname"
    echo "Probably: '{\"lifetime\":\"48\"}' or some other number of hours"
    return 1
  fi
  curl -k -X PUT -d "$2" -H X-AUTH-TOKEN:df0zurdwun6g7dr7ss2ymozlwpf2qvdk --url https://vmpooler.delivery.puppetlabs.net/api/v1/vm/$1
}

snapshotvm () {
  curl -k -X POST -H X-AUTH-TOKEN:df0zurdwun6g7dr7ss2ymozlwpf2qvdk --url https://vmpooler.delivery.puppetlabs.net/api/v1/vm/$1/snapshot
}

revertvm () {
  curl -k -X POST -H X-AUTH-TOKEN:df0zurdwun6g7dr7ss2ymozlwpf2qvdk --url https://vmpooler.delivery.puppetlabs.net/api/v1/vm/$1/snapshot/$2
}

tokenlist () {
  curl -k -X GET -u joshua.partlow --url https://vmpooler.delivery.puppetlabs.net/api/v1/token
}
tokenget () {
  curl -k -X POST -u joshua.partlow --url https://vmpooler.delivery.puppetlabs.net/api/v1/token
}

tokendel () {
  token=${1?}

  if [ -z $token ]; then
    echo "Must provide the token string."
    return 1
  fi
  curl -k -X DELETE -u joshua.partlow --url https://vmpooler.delivery.puppetlabs.net/api/v1/token/$token
}

# End vmpooler commands
#####################################################

# Pull down the passed PR # from the upstream fork of the current github
# project
fetchpr () {
  pr_num=$1
   
  git fetch upstream "refs/pull/${pr_num}/head"
  git checkout -b "pull-${pr_num}" FETCH_HEAD
}

###########################################################
# TMUX functions

# This is used to establish a neutral symlink as ~/.ssh/ssh_auth_sock_for_tmux
# to the current ssh-agent socket. This symlink is the one tmux uses in the
# SSH_AUTH_SOCK variable stored when the tmux server is initialized.
#
# This ensures that all the shells generated by tmux have a reference to a
# static socket path that is not variable by process. (see ~/.tmux.conf for
# where the env variable is set for tmux, and why it gets inherited in each
# session.)
#
# If the ssh session is lost, then when a new session session is started, this
# method should be used again to bless the new SSH_AUTH_SOCK path as the
# ~/.ssh/ssh_auth_sock_for_tmux link so that when reattaching to tmux, ssh
# agent forwarding works again.
bless_ssh_auth_sock_for_tmux() {
  if [ -n "$SSH_AUTH_SOCK" ]; then
    ln -sf "$SSH_AUTH_SOCK" "$HOME/.ssh/ssh_auth_sock_for_tmux"
    export SSH_AUTH_SOCK
  fi
}

reattach_tmux() {
  bless_ssh_auth_sock_for_tmux
  tmux -S "/tmp/tmux-$(id -u)/pair" attach
}

# TMUX
############################################

# List merged branches for cleanup
merged() {
  git branch --merged | grep -E '^(  )(issue|maint|task|ticket|tmp|feature|merge|fix|bug|PE-)'
}

# A git alias to manage $HOME dotfiles from the $HOME/.dotfiles repository
# See https://github.com/jpartlow/dotfiles/blob/master/README.md
function dotfiles {
  /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}
